<%# The form below won't work if it doesn't have authenticity token generated %>
<!-- <form action="<%= questions_path %>" method="post">
  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
  <input type="submit" value="Create Question">
</form> -->

<%# this will automatically generate authenticity_token hidden field with us
    with the proper value set %>
<!-- <%= form_tag questions_path do %>
  <%= submit_tag "Create Question" %>
<% end %> -->

<%= @q.errors.full_messages.join(", ") %>

<%# form_for helper method in Rails expect an ActiveRecord object. If the object
    is not persisted, Rails will make the form use POST method and the action
    will be to the create controller actions (e.g. questions_path)

    If the object you pass to the form_for is persisted then Rails will make the
    the form use PATCH method (by including a hidden field with name _method)
    and it makes the action url go to the update cotroller action (e.g.
    question_path(@q))
    %>

<%# form_for looks at the type of object that you give it, in this case Question
    and then automatically guesses the url assuming you followed Rails conventions
    so it assumes that you have questions_controller and if you pass it a new
    Question object it will submit it to `questions_path` by convention %>
<%= form_for @q do |f| %>
  <div class="form-group">
    <%= f.label(:title) %>
    <%# this generates an input with a name attributes that is question[title]
        Rails will give us the parameters for this form within the params Hash
        as a value of "question" key. So the params Hash will look like:
        {.."question"=>{"title"=>"my first title", "body"=>"my first body"}..} %>
    <%#= f.text_field(:title, {value: params[:question][:title]}) %>
    <%= f.text_field(:title, {class: "form-control"}) %>
    <p class="help-block">Enter a title describing your question</p>
  </div>
  <div class="form-group">
    <%= f.label(:body) %>
    <%= f.text_area :body, class: "form-control" %>
  </div>
  <%= f.submit({class: "btn btn-primary"}) %>
<% end %>
